diff --git a/setup.py b/setup.py
index b7982a5..cfeb126 100755
--- a/setup.py
+++ b/setup.py
@@ -719,12 +719,6 @@ class pil_build_ext(build_ext):
         if feature.imagequant:
             libs.append(feature.imagequant)
             defs.append(("HAVE_LIBIMAGEQUANT", None))
-        if feature.tiff:
-            libs.append(feature.tiff)
-            defs.append(("HAVE_LIBTIFF", None))
-        if feature.xcb:
-            libs.append(feature.xcb)
-            defs.append(("HAVE_XCB", None))
         if sys.platform == "win32":
             libs.extend(["kernel32", "user32", "gdi32"])
         if struct.unpack("h", b"\0\1")[0] == 1:
@@ -756,33 +750,6 @@ class pil_build_ext(build_ext):
                 )
             )

-        if feature.lcms:
-            extra = []
-            if sys.platform == "win32":
-                extra.extend(["user32", "gdi32"])
-            exts.append(
-                Extension(
-                    "PIL._imagingcms",
-                    ["src/_imagingcms.c"],
-                    libraries=[feature.lcms] + extra,
-                )
-            )
-
-        if feature.webp:
-            libs = [feature.webp]
-            defs = []
-
-            if feature.webpmux:
-                defs.append(("HAVE_WEBPMUX", None))
-                libs.append(feature.webpmux)
-                libs.append(feature.webpmux.replace("pmux", "pdemux"))
-
-            exts.append(
-                Extension(
-                    "PIL._webp", ["src/_webp.c"], libraries=libs, define_macros=defs
-                )
-            )
-
         tk_libs = ["psapi"] if sys.platform == "win32" else []
         exts.append(
             Extension(
diff --git a/src/_imaging.c b/src/_imaging.c
index 1ed5e8a..ad63914 100644
--- a/src/_imaging.c
+++ b/src/_imaging.c
@@ -4130,7 +4130,7 @@ static PyMethodDef functions[] = {
 static int
 setup_module(PyObject* m) {
     PyObject* d = PyModule_GetDict(m);
-    const char* version = (char*)PILLOW_VERSION;
+    const char* version = (char*)"7.2.0";

     /* Ready object types */
     if (PyType_Ready(&Imaging_Type) < 0) {
